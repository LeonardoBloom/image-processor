# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'guiFile.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QGraphicsScene, QGraphicsView, QPushButton, QFileDialog
import cv2
import sys

class Ui_MainWindow(object):
    def __init__(self):
        super().__init__()

        self.imageBox = QGraphicsView()
        self.scene = QGraphicsScene()
        self.imageBox.setScene(self.scene)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(792, 600)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(10, 10, 771, 411))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")

        layout = QtWidgets.QVBoxLayout()
        layout.addWidget(self.imageBox)
        self.frame.setLayout(layout)

        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(0, 0, 771, 411))
        self.label.setText("")
        self.label.setObjectName("label")

        self.loadImage = QtWidgets.QPushButton(self.centralwidget)
        self.loadImage.setGeometry(QtCore.QRect(10, 430, 161, 61))
        self.loadImage.setObjectName("loadImage")
        self.loadImage.clicked.connect(self.load_image)

        self.saveImage = QtWidgets.QPushButton(self.centralwidget)
        self.saveImage.setGeometry(QtCore.QRect(600, 450, 161, 81))
        self.saveImage.setObjectName("saveImage")

        self.resetImage = QtWidgets.QPushButton(self.centralwidget)
        self.resetImage.setGeometry(QtCore.QRect(10, 500, 161, 61))
        self.resetImage.setObjectName("resetImage")

        self.grayscaleButton = QtWidgets.QPushButton(self.centralwidget)
        self.grayscaleButton.setGeometry(QtCore.QRect(240, 450, 141, 31))
        self.grayscaleButton.setObjectName("grayscaleButton")

        self.cartoonButton = QtWidgets.QPushButton(self.centralwidget)
        self.cartoonButton.setGeometry(QtCore.QRect(240, 500, 141, 31))
        self.cartoonButton.setObjectName("cartoonButton")

        self.warpingButton = QtWidgets.QPushButton(self.centralwidget)
        self.warpingButton.setGeometry(QtCore.QRect(410, 450, 141, 31))
        self.warpingButton.setObjectName("warpingButton")

        self.cropButton = QtWidgets.QPushButton(self.centralwidget)
        self.cropButton.setGeometry(QtCore.QRect(410, 500, 141, 31))
        self.cropButton.setObjectName("cropButton")

        MainWindow.setCentralWidget(self.centralwidget)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")

        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.loadImage.setText(_translate("MainWindow", "Load Image"))
        self.saveImage.setText(_translate("MainWindow", "Save Image"))
        self.resetImage.setText(_translate("MainWindow", "Reset Image"))
        self.grayscaleButton.setText(_translate("MainWindow", "Grayscale"))
        self.cartoonButton.setText(_translate("MainWindow", "Cartoon Filter"))
        self.warpingButton.setText(_translate("MainWindow", "Image Warping"))
        self.cropButton.setText(_translate("MainWindow", "Crop Image"))

    def load_image(self):
        file_path, _ = QFileDialog.getOpenFileName(None, "Open Image", "", "Images (*.png *.jpg *.jpeg)")  # Use 'None' instead of 'self'

        if file_path:
            image = cv2.imread(file_path)
            if image is not None:
                # Convert from BGR to RGB format
                image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

                # Convert OpenCV image to QImage
                q_image = QtGui.QImage(image.data, image.shape[1], image.shape[0], image.shape[1] * 3, QtGui.QImage.Format_RGB888)
                pixmap = QtGui.QPixmap.fromImage(q_image)

                # Clear the previous items in the scene and add the new image
                self.scene.clear()
                item = self.scene.addPixmap(pixmap)
                item.setPos(0, 0)  # Adjust position as needed

                # Optional: Enable resizing or moving for the image item
                item.setFlags(QtWidgets.QGraphicsItem.ItemIsMovable | QtWidgets.QGraphicsItem.ItemIsSelectable)
                
                # Optionally scale the image if desired
                item.setScale(0.5)  # Adjust the initial scale as needed
            else:
                QtWidgets.QMessageBox.warning(None, "Error", "Failed to load image.")



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
